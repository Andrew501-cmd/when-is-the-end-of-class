{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MI\\\\Desktop\\\\time\\\\time\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = React.useState('20:30');\n  const [end, setEnd] = React.useState('21:15');\n  const [display, setDisplay] = React.useState(true);\n  const [time, setTime] = React.useState(new Date());\n  const [percentS, setPercentS] = React.useState('0');\n  setInterval(tick, 1000);\n  setInterval(countPercent, 100);\n  function countPercent() {\n    const arrayStart = start.split(\":\");\n    const arrayEnd = end.split(\":\");\n    let timeOnly = (new Date(0, 0, 0, arrayEnd[0], arrayEnd[1], 0) - new Date(0, 0, 0, arrayStart[0], arrayStart[1], 0)) / 60 / 1000;\n    let timePassed = (new Date(0, 0, 0, parseInt(time.getHours().toString(), 10), parseInt(time.getMinutes().toString(), 10), 0) - new Date(0, 0, 0, arrayStart[0], arrayStart[1], 0)) / 60 / 1000;\n    let percent = timePassed * 100 / timeOnly;\n    setPercentS(percent.toFixed(2));\n  }\n  function tick() {\n    setTime(new Date());\n  }\n  function click() {\n    setDisplay(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: display ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0443\\u0440\\u043E\\u043A\\u0430\",\n        onChange: event => setStart(event.target.value),\n        value: start\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u0443\\u0440\\u043E\\u043A\\u0430\",\n        onChange: event => setEnd(event.target.value),\n        value: end\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: click,\n        children: \"GO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: time.toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [percentS, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cMVZZoIZqH07xuFAJ8kw5HUoeD0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","start","setStart","useState","end","setEnd","display","setDisplay","time","setTime","Date","percentS","setPercentS","setInterval","tick","countPercent","arrayStart","split","arrayEnd","timeOnly","timePassed","parseInt","getHours","toString","getMinutes","percent","toFixed","click","className","children","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/MI/Desktop/time/time/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react'\nfunction App() {\n  const [start, setStart] = React.useState('20:30');  \n  const [end, setEnd] = React.useState('21:15');  \n  const [display, setDisplay] = React.useState(true);\n  const [time, setTime] = React.useState(new Date());\n  const [percentS, setPercentS] = React.useState('0');\n\n  setInterval(tick, 1000);\n  setInterval(countPercent, 100);\n\n  function countPercent()\n  {\n    const arrayStart = start.split(\":\");\n    const arrayEnd = end.split(\":\");\n    let timeOnly = (new Date(0, 0, 0, arrayEnd[0], arrayEnd[1], 0) - new Date(0, 0, 0, arrayStart[0], arrayStart[1], 0)) / 60 / 1000\n    let timePassed = (new Date(0, 0, 0, parseInt(time.getHours().toString(), 10), parseInt(time.getMinutes().toString(), 10), 0) - new Date(0, 0, 0, arrayStart[0], arrayStart[1], 0)) / 60 / 1000\n    let percent = timePassed * 100 / timeOnly\n    setPercentS(percent.toFixed(2));\n  }\n\n  function tick()\n  {\n    setTime(new Date());\n  }\n\n  function click()\n  {\n    setDisplay(false);\n  }\n\n  return (  \n    <div className=\"App\">\n      { display ? <div>\n        <input placeholder='Начало урока' onChange={event => setStart(event.target.value)} value={start}></input>\n        <input placeholder='Конец урока' onChange={event => setEnd(event.target.value)} value={end}></input>\n        <button onClick={click}>GO</button>\n      </div>\n      : <div><h1>{time.toLocaleTimeString()}</h1>\n        <h3>{percentS}%</h3></div>\n      }\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}